{
  "name": "rcss",
  "version": "0.0.2",
  "description": "Turn your JavaScript objects into CSS classes.",
  "main": "index.js",
  "directories": {
    "example": "examples"
  },
  "dependencies": {
    "lodash.assign": "^2.4.1",
    "lodash.escape": "^2.4.1",
    "valid-css-props": "0.0.2",
    "valid-media-queries": "0.0.2"
  },
  "devDependencies": {
    "jest-cli": "^0.1.15"
  },
  "scripts": {
    "test": "jest"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/chenglou/RCSS.git"
  },
  "keywords": [
    "css",
    "preprocessor",
    "json",
    "react",
    "rcss",
    "style"
  ],
  "author": {
    "name": "chenglou"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/chenglou/RCSS/issues"
  },
  "jest": {
    "unmockedModulePathPatterns": [
      "./node_modules/*"
    ]
  },
  "gitHead": "9e5ec9614e391d28a621297a63bc2d850eae89e8",
  "readme": "# RCSS\n\nTurn your JavaScript objects into CSS classes.\n\nDesigned with [React](http://facebook.github.io/react/) and [Browserify](http://browserify.org) in mind.\n\n```bash\nnpm install rcss\n```\n\nbutton.js:\n```js\nvar RCSS = require('RCSS');\n\n// and of course, you can use JavaScript here to assign values\n// byebye preprocessors\nvar button = {\n  display: 'inline-block',\n  padding: '6px 12px',\n  // camelCased. Transformed back into the dashed CSS counterparts on-the-fly\n  marginBottom: '0'\n};\n\n// parses the object into a CSS class and adds it to a style sheet\nRCSS.createClass(button);\n\nmodule.exports = button;\n```\n\nindex.js\n```html\n/** @jsx React.DOM */\n\nvar React = require('react-tools').React;\nvar buttonStyle = require('./button');\n\nReact.renderComponent(\n  <button className={buttonStyle.className}>Press Me</button>,\n  document.body\n);\n```\n\n(Check the `examples/` folder for more.)\n\nThat's it. Additional niceties:\n\n- `require()` your CSS since they're just plain JS files. Isn't that enough?\n- **No CSS preprocessor needed**. You're already constructing your JavaScript objects in... well, JavaScript.\n- CSS namespacing for free.\n- Cascading for free through `RCSS.merge(obj1, obj2, obj3, ...)`. It's literally just merging all the properties into a new object.\n- Validates your CSS properties.\n- ... And more to come. Just imagine what you can do to normal objects.\n\n## License\nMIT.\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/chenglou/RCSS",
  "_id": "rcss@0.0.2",
  "_shasum": "45ebbb69e0283474fc22685d3a53aacad47788cc",
  "_from": "../../../../../../../../../tmp/npm-4456-cf3175b8/git-cache-39bb98c35fa9/9e5ec9614e391d28a621297a63bc2d850eae89e8",
  "_resolved": "git+https://github.com/khan/RCSS#9e5ec9614e391d28a621297a63bc2d850eae89e8"
}
